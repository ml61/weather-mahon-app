{"version":3,"sources":["actions/types.js","config/apiPath.js","config/weatherApi.js","config/placesApi.js","helperFunctions.js","components/Form.js","actions/index.js","components/DateOption.js","components/DateSelector.js","components/Error.js","components/WeatherCard.js","components/Loading.js","components/AddNoteModalForm.js","components/ButtonsSection.js","pages/Home.js","components/CityCard.js","pages/MyCities.js","components/NoteCard.js","pages/MyNotes.js","components/Menu.js","App.js","reducers/index.js","reducers/currentPositionReducer.js","reducers/weatherDateReducer.js","reducers/uiReducer.js","reducers/forecastReducer.js","reducers/myCitiesReducer.js","reducers/notesReducer.js","index.js"],"names":["SET_CURRENT_POSITION","SET_WEATHER_DATE","START_LOADING","SUCCESS_LOADING","ERROR_LOADING","SET_FORECAST","ADD_CITY_TO_MY_CITIES","DELETE_CITY_FROM_MY_CITIES","ADD_NOTE","DELETE_NOTE","API_KEY","PLACES_API_KEY","placesRootPath","axios","create","baseURL","placesApiWithProxy","formatCity","data","cityObj","Array","isArray","ParentCity","id","Key","name","EnglishName","country","Country","formatDate","date","month","getMonth","day","getDate","year","getFullYear","length","join","isDisplayedCityIsInMyCities","displayedCity","myCities","find","city","Form","useState","setCity","dispatch","useDispatch","className","onSubmit","e","cityName","preventDefault","a","type","weatherApi","get","params","q","apikey","response","console","log","err","Error","message","currentCity","payload","htmlFor","value","onChange","target","required","DateOption","DateSelector","Date","now","setDate","fiveDates","setFiveDates","useEffect","dateArr","i","push","getTime","makeFiveDateOptions","map","index","WeatherCard","forecastForChosenDate","error","isLoading","cloudCover","icon","iconPhrase","description","windDirection","windSpeed","minTemperature","maxTemperature","faTemperatureLow","faTemperatureHigh","faWind","size","faCompass","faCloud","src","alt","width","Loading","AddNoteModalForm","props","noteTitle","setNoteTitle","noteDescription","setNoteDescription","showSuccessAlert","setShowSuccessAlert","weatherDate","useSelector","state","Modal","aria-labelledby","centered","Header","closeButton","Title","noteForDate","whenAdded","addNote","setTimeout","onHide","Body","Alert","variant","maxlength","class","rows","Footer","Button","onClick","ButtonsSection","modalShow","setModalShow","color","photoReference","candidates","photos","photo_reference","imageUrl","addCity","show","Home","fiveDaysForecast","forecast","errorObj","getCoords","position","coords","latt","latitude","long","longitude","getCityIdFromCoords","deniedPostion","window","navigator","geolocation","getCurrentPosition","details","metric","dailyForecasts","DailyForecasts","formattedDailyForecasts","dateBeforeFormatting","temperature","Temperature","Day","CloudCover","LongPhrase","wind","Wind","IconPhrase","formatIcon","Icon","Direction","Localized","Speed","Value","Minimum","Maximum","getFiveDaysForecast","CityCard","history","useHistory","Card","style","height","Img","Text","MyCities","NoteCard","Subtitle","MyNotes","myNotes","note","Menu","to","App","exact","path","combineReducers","action","filter","store","createStore","rootReducer","serialisedState","localStorage","getItem","JSON","parse","warn","loadFromLocalStorage","composeWithDevTools","applyMiddleware","reduxThunk","subscribe","formattedState","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c7213a31.chunk.js","sourcesContent":["export const SET_CURRENT_POSITION = \"SET_CURRENT_POSITION\";\r\nexport const SET_WEATHER_DATE = \"SET_WEATHER_DATE\";\r\nexport const START_LOADING = \"START_LOADING\";\r\nexport const SUCCESS_LOADING = \"SUCCESS_LOADING\";\r\nexport const ERROR_LOADING = \"ERROR_LOADING\";\r\nexport const SET_FORECAST = \"SET_FORECAST\";\r\nexport const ADD_CITY_TO_MY_CITIES = \"ADD_CITY_TO_MY_CITIES\";\r\nexport const DELETE_CITY_FROM_MY_CITIES = \"DELETE_CITY_FROM_MY_CITIES\";\r\nexport const ADD_NOTE = \"ADD_NOTE\";\r\nexport const DELETE_NOTE = \"DELETE_NOTE\";\r\n","export const rootPath = \"http://dataservice.accuweather.com\";\r\n\r\nexport const API_KEY = \"IIBx8OcIbZkn9b9WNsTaw7hW4Y1e97GS\";\r\n\r\nexport const cityIdFromCoords = \"/locations/v1/cities/geoposition/search\";\r\n\r\nexport const cityIdFromCityName = \"/locations/v1/cities/search\";\r\nexport const forecastFiveDaysPath = \"/forecasts/v1/daily/5day/\";\r\n\r\nexport const weatherIconPath =\r\n  \"https://apidev.accuweather.com/developers/Media/Default/WeatherIcons/\";\r\n\r\nexport const PLACES_API_KEY = \"AIzaSyBQ9d4Y0sUxB7fXYSHovtlq_YGozZfpm8Q\";\r\n\r\nexport const placesRootPath = \"https://maps.googleapis.com/maps/api/place\";\r\n\r\nexport const pathToPhotoReference =\r\n  \"https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=Krakow&key=AIzaSyBQ9d4Y0sUxB7fXYSHovtlq_YGozZfpm8Q&inputtype=textquery&fields=name,photos\"; //get photoReference from here\r\n\r\nexport const photoPath =\r\n  \"https://maps.googleapis.com/maps/api/place/photo?photoreference=PHOTO_REF&key=API_KEY&maxwidth=400&maxheight=400\"; //inset photoRef in this link + maxwidth and maxheight\r\n\r\nexport const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n","import axios from \"axios\";\r\nimport { rootPath } from \"./apiPath\";\r\n\r\n\r\nexport default axios.create({\r\n  baseURL: rootPath,\r\n});\r\n","import axios from \"axios\";\r\nimport { placesRootPath, proxyUrl } from \"./apiPath\";\r\n\r\nexport const placesApiWithoutProxy = axios.create({ baseURL: placesRootPath });\r\nexport const placesApiWithProxy = axios.create({\r\n  baseURL: proxyUrl + placesRootPath,\r\n});\r\n","export const formatCity = (data) => {\r\n  let cityObj;\r\n  if (Array.isArray(data)) {\r\n    cityObj = data[0];\r\n  } else cityObj = data;\r\n\r\n  return cityObj.ParentCity\r\n    ? {\r\n        id: cityObj.ParentCity.Key,\r\n        name: cityObj.ParentCity.EnglishName,\r\n        country: cityObj.Country.EnglishName,\r\n      }\r\n    : {\r\n        id: cityObj.Key,\r\n        name: cityObj.EnglishName,\r\n        country: cityObj.Country.EnglishName,\r\n      };\r\n};\r\n\r\nexport const makeFiveDateOptions = () => {\r\n  let today = new Date(Date.now());\r\n  let dateArr = [today];\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    dateArr.push(new Date(dateArr[i].getTime() + 1000 * 3600 * 24));\r\n  }\r\n  return dateArr;\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  let month = \"\" + (date.getMonth() + 1);\r\n  let day = \"\" + date.getDate();\r\n  let year = date.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [day, month, year].join(\"-\");\r\n};\r\n\r\nconst formatIcon = (icon) => {\r\n  icon = \"\" + icon;\r\n  return icon.length < 2 ? `0${icon}-s.png` : `${icon}-s.png`;\r\n};\r\nexport const formatForecastReponse = (data) => {\r\n  const formattedForecast = data.map((data) => {\r\n    const {\r\n      Date: dateBeforeFormatting,\r\n      Temperature: temperature,\r\n      Day: day,\r\n    } = data;\r\n    const {\r\n      CloudCover: cloudCover,\r\n      LongPhrase: description,\r\n      Wind: wind,\r\n      IconPhrase: iconPhrase,\r\n    } = day;\r\n    const icon = formatIcon(day.Icon);\r\n\r\n    const { Localized: windDirection } = wind.Direction;\r\n    const { Value: windSpeed } = wind.Speed;\r\n    const { Value: minTemperature } = temperature.Minimum;\r\n    const { Value: maxTemperature } = temperature.Maximum;\r\n\r\n    const weatherDate = formatDate(new Date(dateBeforeFormatting));\r\n\r\n    return {\r\n      weatherDate,\r\n      cloudCover,\r\n      icon,\r\n      iconPhrase,\r\n      description,\r\n      windDirection,\r\n      windSpeed,\r\n      minTemperature,\r\n      maxTemperature,\r\n    };\r\n  });\r\n  return formattedForecast;\r\n};\r\n\r\nexport const isDisplayedCityIsInMyCities = (displayedCity, myCities) => {\r\n  return myCities.find((city) => city.id === displayedCity.id) ? true : false;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getCityIdFromCityName } from \"../actions\";\r\n\r\nfunction Form() {\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCityChange = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getCityIdFromCityName(city));\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"form-inline d-flex justify-content-center align-items-center\"\r\n      onSubmit={handleSubmitForm}\r\n    >\r\n      <div className=\"d-flex mx-2\">\r\n        <label className=\"mx-2\" htmlFor=\"inputCity\">\r\n          City\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"inputCity\"\r\n          value={city}\r\n          onChange={handleCityChange}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import {\r\n  SET_CURRENT_POSITION,\r\n  START_LOADING,\r\n  SUCCESS_LOADING,\r\n  ERROR_LOADING,\r\n  SET_FORECAST,\r\n  ADD_NOTE,\r\n  ADD_CITY_TO_MY_CITIES,\r\n} from \"./types\";\r\nimport weatherApi from \"../config/weatherApi\";\r\nimport { placesApiWithProxy } from \"../config/placesApi\";\r\nimport {\r\n  API_KEY,\r\n  cityIdFromCoords,\r\n  cityIdFromCityName,\r\n  forecastFiveDaysPath,\r\n  PLACES_API_KEY,\r\n} from \"../config/apiPath\";\r\n\r\nimport { placesRootPath } from \"../config/apiPath\";\r\n\r\nimport {\r\n  formatCity,\r\n  formatForecastReponse,\r\n  formatDate,\r\n} from \"../helperFunctions\";\r\n\r\nexport const getCityIdFromCoords = (latt, long) => async (dispatch) => {\r\n  dispatch({ type: START_LOADING });\r\n  try {\r\n    const response = await weatherApi.get(cityIdFromCoords, {\r\n      params: {\r\n        apikey: API_KEY,\r\n        q: `${latt},${long}`,\r\n      },\r\n    });\r\n\r\n    const currentCity = formatCity(response.data);\r\n    dispatch({ type: SET_CURRENT_POSITION, payload: currentCity });\r\n    dispatch({ type: SUCCESS_LOADING });\r\n  } catch (err) {\r\n    dispatch({ type: ERROR_LOADING, payload: err });\r\n  }\r\n};\r\n\r\nexport const getCityIdFromCityName = (cityName) => async (dispatch) => {\r\n  dispatch({ type: START_LOADING });\r\n  try {\r\n    const response = await weatherApi.get(cityIdFromCityName, {\r\n      params: {\r\n        q: cityName,\r\n        apikey: API_KEY,\r\n      },\r\n    });\r\n    if (response.data.length === 0) {\r\n      console.log(\"this is from error\");\r\n      const err = new Error();\r\n      err.message = `We don't have any results for ${cityName}. Please check input and try again`;\r\n      throw err;\r\n    }\r\n    const currentCity = formatCity(response.data);\r\n    dispatch({ type: SET_CURRENT_POSITION, payload: currentCity });\r\n    dispatch({ type: SUCCESS_LOADING });\r\n  } catch (err) {\r\n    dispatch({ type: ERROR_LOADING, payload: err });\r\n  }\r\n};\r\n\r\nexport const getFiveDaysForecast = ({ id }) => async (dispatch) => {\r\n  dispatch({ type: START_LOADING });\r\n  try {\r\n    const response = await weatherApi.get(forecastFiveDaysPath + id, {\r\n      params: {\r\n        details: true,\r\n        metric: true,\r\n        apikey: API_KEY,\r\n      },\r\n    });\r\n    const { DailyForecasts: dailyForecasts } = response.data;\r\n\r\n    const formattedDailyForecasts = formatForecastReponse(dailyForecasts);\r\n\r\n    dispatch({\r\n      type: SET_FORECAST,\r\n      payload: formattedDailyForecasts,\r\n    });\r\n    dispatch({ type: SUCCESS_LOADING });\r\n  } catch (err) {\r\n    dispatch({ type: ERROR_LOADING, payload: err });\r\n  }\r\n};\r\n\r\nexport const addNote = (noteTitle, noteDescription, noteForDate) => {\r\n  const id = Date.now();\r\n  const whenAdded = formatDate(new Date(id));\r\n  return {\r\n    type: ADD_NOTE,\r\n    payload: { noteTitle, noteDescription, noteForDate, whenAdded, id },\r\n  };\r\n};\r\n\r\nexport const addCity = (currentCity) => async (dispatch) => {\r\n  try {\r\n    const response = await placesApiWithProxy.get(\r\n      `/findplacefromtext/json?input=${currentCity.name}&key=${PLACES_API_KEY}&inputtype=textquery&fields=name,photos`\r\n    );\r\n    const photoReference =\r\n      response.data.candidates[0].photos[0].photo_reference;\r\n\r\n    const imageUrl =\r\n      placesRootPath +\r\n      `/photo?photoreference=${photoReference}&key=${PLACES_API_KEY}&maxwidth=250&maxheight=250`;\r\n\r\n    dispatch({\r\n      type: ADD_CITY_TO_MY_CITIES,\r\n      payload: { ...currentCity, imageUrl },\r\n    });\r\n    // console.log(imageUrl);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { formatDate } from \"../helperFunctions\";\r\n\r\nfunction DateOption({ date }) {\r\n  return <option value={formatDate(date)}>{formatDate(date)}</option>;\r\n}\r\n\r\nexport default DateOption;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SET_WEATHER_DATE } from \"../actions/types\";\r\nimport { makeFiveDateOptions } from \"../helperFunctions\";\r\nimport DateOption from \"./DateOption\";\r\n\r\nfunction DateSelector() {\r\n  const [date, setDate] = useState(new Date(Date.now()));\r\n  const [fiveDates, setFiveDates] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDateChange = (e) => {\r\n    setDate(e.target.value);\r\n    dispatch({ type: SET_WEATHER_DATE, payload: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFiveDates(makeFiveDateOptions());\r\n  }, []);\r\n\r\n  if (!fiveDates) return null;\r\n\r\n  return (\r\n    <div className=\"d-flex mx-3\">\r\n      <select\r\n        id=\"inputState\"\r\n        className=\"form-control\"\r\n        value={date}\r\n        onChange={handleDateChange}\r\n      >\r\n        {fiveDates.map((date, index) => (\r\n          <DateOption key={index} date={date} />\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DateSelector;\r\n","import React from \"react\";\r\n\r\nfunction Error({ err }) {\r\n  return (\r\n    <div>\r\n      <h2>{err?.message}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { weatherIconPath } from \"../config/apiPath\";\r\nimport {\r\n  faCompass,\r\n  faCloud,\r\n  faWind,\r\n  faTemperatureHigh,\r\n  faTemperatureLow,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport DateSelector from \"./DateSelector\";\r\nimport Error from \"./Error\";\r\n\r\nfunction WeatherCard({ forecastForChosenDate, error, isLoading, currentCity }) {\r\n  if (!forecastForChosenDate) return <Error err={error} />;\r\n\r\n  const {\r\n    cloudCover,\r\n    icon,\r\n    iconPhrase,\r\n    description,\r\n    windDirection,\r\n    windSpeed,\r\n    minTemperature,\r\n    maxTemperature,\r\n  } = forecastForChosenDate;\r\n\r\n  if (error) return <Error err={error} />;\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-12 col-md-12 col-sm-12 col-xs-12\">\r\n          <div className=\"card p-4\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h4>{currentCity.name}</h4>\r\n              <DateSelector />\r\n              <h4>{currentCity.country}</h4>\r\n            </div>\r\n            <div className=\"d-flex flex-column justify-content-center align-items-center temp mt-5 mb-5\">\r\n              <h1 className=\"mb-2 font-weight-bold\" id=\"heading\">\r\n                <FontAwesomeIcon icon={faTemperatureLow} />{\" \"}\r\n                <span className=\"mx-3\"> {minTemperature}° C</span>{\" \"}\r\n              </h1>{\" \"}\r\n              <h1 className=\"mb-0 font-weight-bold\" id=\"heading\">\r\n                <FontAwesomeIcon icon={faTemperatureHigh} />{\" \"}\r\n                <span className=\"mx-3\"> {maxTemperature}° C</span>{\" \"}\r\n              </h1>{\" \"}\r\n              <span className=\"small grey mt-1\">{description}</span>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n              <div className=\"temp-details flex-grow-1\">\r\n                <p className=\"my-1\">\r\n                  <FontAwesomeIcon icon={faWind} size=\"lg\" />\r\n                  <span className=\"mx-1\"> {windSpeed} km/h </span>\r\n                </p>\r\n                <p className=\"my-1\">\r\n                  <FontAwesomeIcon icon={faCompass} size=\"lg\" />\r\n                  <span className=\"mx-1\"> {windDirection} </span>\r\n                </p>\r\n                <p className=\"my-1\">\r\n                  <FontAwesomeIcon icon={faCloud} size=\"lg\" />\r\n                  <span className=\"mx-1\"> {cloudCover}% </span>\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <img\r\n                  src={weatherIconPath + icon}\r\n                  alt={iconPhrase}\r\n                  width=\"100px\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherCard;\r\n","import React from \"react\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div>\r\n      <h2>Loading</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addNote } from \"../actions\";\r\n\r\nfunction AddNoteModalForm(props) {\r\n  const [noteTitle, setNoteTitle] = useState(\"\");\r\n  const [noteDescription, setNoteDescription] = useState(\"\");\r\n  const [showSuccessAlert, setShowSuccessAlert] = useState(false);\r\n\r\n  const weatherDate = useSelector((state) => state.weatherDate);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNoteTitleChange = (e) => {\r\n    setNoteTitle(e.target.value);\r\n  };\r\n  const handleNoteDescriptionChange = (e) => {\r\n    setNoteDescription(e.target.value);\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    setShowSuccessAlert(true);\r\n    dispatch(addNote(noteTitle, noteDescription, weatherDate));\r\n    setTimeout(() => {\r\n      props.onHide();\r\n      setShowSuccessAlert(false);\r\n      setNoteTitle(\"\");\r\n      setNoteDescription(\"\");\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Fill the form for adding note\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <Modal.Body>\r\n          {showSuccessAlert ? (\r\n            <Alert variant=\"success\">\r\n              Note {noteTitle} was successfully added to note-list.\r\n            </Alert>\r\n          ) : (\r\n            <>\r\n              <div className=\"mb-2\">\r\n                <label className=\"mx-2\" htmlFor=\"inputCity\">\r\n                  Note Title\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"inputCity\"\r\n                  value={noteTitle}\r\n                  onChange={handleNoteTitleChange}\r\n                  maxlength=\"20\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label htmlFor=\"exampleFormControlTextarea1\">Description</label>\r\n                <textarea\r\n                  class=\"form-control\"\r\n                  id=\"exampleFormControlTextarea1\"\r\n                  rows=\"3\"\r\n                  value={noteDescription}\r\n                  onChange={handleNoteDescriptionChange}\r\n                  maxlength=\"100\"\r\n                ></textarea>\r\n              </div>\r\n            </>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {showSuccessAlert ? null : (\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          )}\r\n\r\n          <Button className=\"mx-4\" onClick={props.onHide}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddNoteModalForm;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { isDisplayedCityIsInMyCities } from \"../helperFunctions\";\r\nimport { DELETE_CITY_FROM_MY_CITIES } from \"../actions/types\";\r\nimport { addCity } from \"../actions/index\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport AddNoteModalForm from \"./AddNoteModalForm\";\r\n\r\nfunction ButtonsSection({ currentCity, myCities, error, weatherDate }) {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  if (error) return null;\r\n\r\n  return (\r\n    <div className=\"mt-4 mb-4 d-flex justify-content-around\">\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          isDisplayedCityIsInMyCities(currentCity, myCities)\r\n            ? dispatch({\r\n                type: DELETE_CITY_FROM_MY_CITIES,\r\n                payload: currentCity,\r\n              })\r\n            : dispatch(addCity(currentCity));\r\n        }}\r\n      >\r\n        {isDisplayedCityIsInMyCities(currentCity, myCities)\r\n          ? \"Delete City\"\r\n          : \"Add City\"}\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => setModalShow(true)}\r\n      >\r\n        Add Note\r\n      </Button>\r\n      <AddNoteModalForm show={modalShow} onHide={() => setModalShow(false)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonsSection;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCityIdFromCoords } from \"../actions\";\r\nimport { getFiveDaysForecast } from \"../actions\";\r\nimport { ERROR_LOADING } from \"../actions/types\";\r\n\r\nimport Form from \"../components/Form\";\r\nimport WeatherCard from \"../components/WeatherCard\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nimport ButtonsSection from \"../components/ButtonsSection\";\r\n\r\nfunction Home() {\r\n  const currentCity = useSelector((state) => state.currentCity);\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n  const fiveDaysForecast = useSelector((state) => state.forecast);\r\n  const weatherDate = useSelector((state) => state.weatherDate);\r\n  const error = useSelector((state) => state.errorObj);\r\n  const myCities = useSelector((state) => state.myCities);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const forecastForChosenDate = fiveDaysForecast?.find(\r\n    (data) => data.weatherDate === weatherDate\r\n  );\r\n\r\n  const getCoords = (position) => {\r\n    const { latitude: latt, longitude: long } = position.coords;\r\n    dispatch(getCityIdFromCoords(latt, long));\r\n  };\r\n\r\n  const deniedPostion = (position) => {\r\n    dispatch({\r\n      type: ERROR_LOADING,\r\n      payload: {\r\n        ...position,\r\n        message: `Geolocation was denied. Please enter a city.`,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!currentCity)\r\n      window.navigator.geolocation.getCurrentPosition(getCoords, deniedPostion);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!currentCity) return;\r\n    dispatch(getFiveDaysForecast(currentCity));\r\n  }, [currentCity]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form />\r\n      <div className=\"mt-4 d-flex flex-column\">\r\n        {isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <WeatherCard\r\n            forecastForChosenDate={forecastForChosenDate}\r\n            error={error}\r\n            isLoading={isLoading}\r\n            currentCity={currentCity}\r\n          />\r\n        )}\r\n\r\n        <ButtonsSection\r\n          currentCity={currentCity}\r\n          myCities={myCities}\r\n          error={error}\r\n          weatherDate={weatherDate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport { SET_CURRENT_POSITION } from \"../actions/types\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction CityCard({ imageUrl, name, country, id }) {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    dispatch({ type: SET_CURRENT_POSITION, payload: { name, country, id } });\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-xs-12 col-md-6 col-lg-4 col-xl-3  mb-3\">\r\n      <Card style={{ height: \"25rem\" }}>\r\n        <div className=\"card__img-container \">\r\n          <Card.Img className=\"card__img\" variant=\"top\" src={imageUrl} />\r\n        </div>\r\n        <Card.Body className=\"d-flex flex-column\">\r\n          <div className=\"flex-grow-1\">\r\n            <Card.Title>{name}</Card.Title>\r\n            <Card.Text>{country}</Card.Text>\r\n          </div>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n            Check Weather\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CityCard;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CityCard from \"../components/CityCard\";\r\n\r\nfunction MyCities() {\r\n  const myCities = useSelector((state) => state.myCities);\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"d-flex justify-content-center mb-4\">My cities</h2>\r\n      <div className=\"row\">\r\n        {myCities.map((city) => (\r\n          <CityCard key={city.id} {...city} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyCities;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DELETE_NOTE } from \"../actions/types\";\r\n\r\nfunction NoteCard({ noteTitle, noteDescription, noteForDate, id }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = () => {\r\n    dispatch({ type: DELETE_NOTE, payload: id });\r\n  };\r\n  return (\r\n    <div className=\"col-sm-12 col-md-6 col-lg-4 col-xl-3  mb-3\">\r\n      <Card style={{ height: \"18rem\" }}>\r\n        <Card.Body className=\"d-flex flex-column\">\r\n          <div className=\"flex-grow-1\">\r\n            <Card.Title>{noteTitle}</Card.Title>\r\n\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              For date: {noteForDate}\r\n            </Card.Subtitle>\r\n            <Card.Text>{noteDescription}</Card.Text>\r\n          </div>\r\n\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleDelete}>\r\n            Done and Delete\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteCard;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport NoteCard from \"../components/NoteCard\";\r\n\r\nfunction MyNotes() {\r\n  const myNotes = useSelector((state) => state.myNotes);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"d-flex justify-content-center mb-4\">My notes</h2>\r\n      <div className=\"row\">\r\n        {myNotes.map((note) => (\r\n          <NoteCard key={note.id} {...note} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyNotes;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nfunction Menu() {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <ul className=\"d-flex p-2 bd-highlight justify-content-around list-unstyled\">\r\n          <li>\r\n            <Link to=\"/\">\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Home\r\n              </Button>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/mycities\">\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                My Cities\r\n              </Button>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/mynotes\">\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                My Notes\r\n              </Button>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport MyCities from \"./pages/MyCities\";\r\nimport MyNotes from \"./pages/MyNotes\";\r\nimport Menu from \"./components/Menu\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Menu />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/mycities\">\r\n            <MyCities />\r\n          </Route>\r\n          <Route path=\"/mynotes\">\r\n            <MyNotes />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { currentPostionReducer } from \"./currentPositionReducer\";\r\nimport { weatherDateReducer } from \"./weatherDateReducer\";\r\nimport { isLoading, errorObj } from \"./uiReducer\";\r\nimport { forecastReducer } from \"./forecastReducer\";\r\nimport { myCitiesReducer } from \"./myCitiesReducer\";\r\nimport { notesReducer } from \"./notesReducer\";\r\n\r\nexport default combineReducers({\r\n  currentCity: currentPostionReducer,\r\n  weatherDate: weatherDateReducer,\r\n  isLoading,\r\n  errorObj,\r\n  forecast: forecastReducer,\r\n  myCities: myCitiesReducer,\r\n  myNotes: notesReducer,\r\n});\r\n","import { SET_CURRENT_POSITION } from \"../actions/types\";\r\n\r\nexport const currentPostionReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_POSITION:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_WEATHER_DATE } from \"../actions/types\";\r\nimport { formatDate } from \"../helperFunctions\";\r\n\r\nexport const weatherDateReducer = (\r\n  state = formatDate(new Date(Date.now())),\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case SET_WEATHER_DATE:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  START_LOADING,\r\n  SUCCESS_LOADING,\r\n  ERROR_LOADING,\r\n} from \"../actions/types\";\r\n\r\nexport const isLoading = (state = null, action) => {\r\n  switch (action.type) {\r\n    case START_LOADING:\r\n      return true;\r\n    case SUCCESS_LOADING:\r\n      return false;\r\n    case ERROR_LOADING:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const errorObj = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SUCCESS_LOADING:\r\n      return null;\r\n    case ERROR_LOADING:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_FORECAST } from \"../actions/types\";\r\n\r\nexport const forecastReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_FORECAST:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_CITY_TO_MY_CITIES,\r\n  DELETE_CITY_FROM_MY_CITIES,\r\n} from \"../actions/types\";\r\n\r\nexport const myCitiesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_CITY_TO_MY_CITIES:\r\n      return [...state, action.payload];\r\n    case DELETE_CITY_FROM_MY_CITIES:\r\n      return state.filter((city) => city.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_NOTE, DELETE_NOTE } from \"../actions/types\";\r\n\r\nexport const notesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_NOTE:\r\n      return [...state, action.payload];\r\n    case DELETE_NOTE:\r\n      return state.filter((note) => note.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers\";\r\nimport \"./style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// convert currentCity, myCities and myNotes to string and store in localStorage\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const { currentCity, myCities, myNotes } = state;\r\n    const formattedState = { currentCity, myCities, myNotes };\r\n    const serialisedState = JSON.stringify(formattedState);\r\n    localStorage.setItem(\"persistantState\", serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\n\r\n// load string from localStarage and convert into an Object\r\n// invalid output must be undefined\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serialisedState = localStorage.getItem(\"persistantState\");\r\n    if (serialisedState === null) return undefined;\r\n    return JSON.parse(serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\n// create our store from our rootReducers and use loadFromLocalStorage\r\n// to overwrite any values that we already have saved\r\nconst store = createStore(\r\n  rootReducer,\r\n  loadFromLocalStorage(),\r\n  composeWithDevTools(applyMiddleware(reduxThunk))\r\n);\r\n\r\n// listen for store changes and use saveToLocalStorage to\r\n// save them to localStorage\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}